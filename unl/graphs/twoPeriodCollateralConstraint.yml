

schema: EconSchema

params:
- {name: y1, value: 5, min: 0, max: 10, round: 0.1}
- {name: y2, value: 3, min: 0, max: 10, round: 0.1}
- {name: t1, value: 0, min: -10, max: 10, round: 0.001}
- {name: t2, value: 0, min: -10, max: 10, round: 0.001}
- {name: b, value: 0.8, min: 0, max: 1, round: 0.05}
- {name: r, value: 0.25, min: 0, max: 3, round: 0.05}
- {name: pH, value: 2, min: 0, max: 6, round: 0.05}
- {name: showEuler, value: 1}
- {name: showIndifference, value: 0}

calcs:
  endowment1: (params.y1-params.t1)
  endowment2: (params.y2-params.t2)
  borrowingLimit: (params.pH/(1+params.r))
  corner1: calcs.endowment1+calcs.borrowingLimit
  corner2: calcs.endowment2-calcs.borrowingLimit*(1+params.r)
  
  we: "(calcs.endowment1+(calcs.endowment2)/(1+params.r))"
  c1: "(calcs.we / (1+params.b))"
  c2: "(calcs.c1 * params.b * (1+params.r))"
  
  s: "(calcs.endowment1 - calcs.c1)"
  utility: "(log(calcs.c1)+params.b*log(calcs.c2))"
  MRS: "(calcs.c2/(params.b*calcs.c1))"
  
  # stand-in for conditionals to determine which optimum point displays
  interiorSolution: max(calcs.s+calcs.borrowingLimit, 0)
  cornerSolution: max(-calcs.s-calcs.borrowingLimit+0.001, 0)

layout:
  OneGraphPlusSidebar:
    graph:
    
      xAxis: 
        title: "$c$: Consumption Today"
      yAxis: 
        title: "$c'$: Consumption Tomorrow"

      objects:
               
      - ContourMap:
          levels: [0,1,2,3,4]
          fn: "(log(x)+params.b*log(y))"
          show: params.showIndifference
          strokeWidth: 0.2
      - Contour:
          level: "(log(calcs.c1)+params.b*log(calcs.c2))"
          show: calcs.interiorSolution*params.showIndifference
          fn: "(log(x)+params.b*log(y))"
          color: purple
          strokeWidth: 2
      - Contour:
          level: "(log(calcs.corner1)+params.b*log(calcs.corner2))"
          show: calcs.cornerSolution*params.showIndifference
          fn: "(log(x)+params.b*log(y))"
          color: purple
          strokeWidth: 2
      
      # budget
      - Line:
          point: [calcs.endowment1,calcs.endowment2]
          slope: -(1+params.r)
          max: calcs.endowment1+calcs.borrowingLimit
          color: green
      - Segment:
          a: [calcs.corner1,0]
          b: [calcs.corner1,calcs.corner2]
          color: green
          strokeWidth: 2
          lineStyle: dotted

      # Euler Equation Line
      - Line:
          lineStyle: dotted
          color: blue
          yIntercept: 0
          slope: (1+params.r)*params.b
          show: params.showEuler


      # Endowment Point
      - Point:
          coordinates: [calcs.endowment1,calcs.endowment2]
          color: green
          label:
            text: \text{E}
          drag: 
            - directions: x
              param: t1
              expression: "params.y1-drag.x"
            - directions: x
              param: t2
              expression: "-(params.y1-drag.x)*(1+params.r)"


      # Optimum Point
      - Point:
          coordinates: [calcs.c1,calcs.c2]
          show: calcs.interiorSolution
          color: red
          label:
            text: \text{★}
      - Point:
          coordinates: [calcs.corner1,calcs.corner2]
          show: calcs.cornerSolution
          color: red
          label:
            text: \text{★}

    sidebar:
      controls:
      - title: Exogenous Variables / Settings
        sliders:
        - {param: y1, label: y}
        - {param: y2, label: y^\prime}
        - {param: t1, label: t}
        - {param: t2, label: t^\prime}
        - {param: r, label: r}
        - {param: b, label: \beta}
        - {param: pH, label: pH}
        
        checkboxes:
          - param: showEuler
            label: "\\text{Show Tangency Condition}"
          - param: showIndifference
            label: "\\text{Show Indifference Curves}"
	    